apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ template "mutating-webhook.name" . }}
  name: {{ template "mutating-webhook.name" . }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "mutating-webhook.name" . }}
  template:
    metadata:
      labels:
        app: {{ template "mutating-webhook.name" . }}
        {{- include "mutating-webhook.taggingLabels" . | nindent 8 }}
      annotations:
        {{- if .Values.podTemplate.annotations }}
{{ toYaml .Values.podTemplate.annotations | indent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ template "mutating-webhook.name" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: TLS
              valueFrom:
                configMapKeyRef:
                  name: mutating-webhook
                  key: tlsEnabled
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: mutating-webhook
                  key: logLevel
            - name: LOG_JSON
              valueFrom:
                configMapKeyRef:
                  name: mutating-webhook
                  key: logAsJSON
            - name: SOURCE_REGISTRY
              valueFrom:
                configMapKeyRef:
                  name: mutating-webhook
                  key: sourceRegistry
            - name: TARGET_REGISTRY
              valueFrom:
                configMapKeyRef:
                  name: mutating-webhook
                  key: targetRegistry
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /health
              port: 443
              scheme: {{ .Values.livenessProbe.scheme }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /health
              port: 443
              scheme: {{ .Values.readinessProbe.scheme }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          {{- end }}
          volumeMounts:
            - name: tls
              mountPath: "/etc/admission-webhook/tls"
              readOnly: true
      volumes:
        - name: tls
          secret:
            secretName: {{ include "mutating-webhook.name" . }}-ca
